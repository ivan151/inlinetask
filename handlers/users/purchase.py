import logging

from aiogram.dispatcher.filters import Command
from aiogram.types import Message, CallbackQuery, InlineKeyboardMarkup, InlineKeyboardButton

from data.db import fruits
from keyboards.inline.callback_datas import buy_callback, choose_callback, like_callback, dislike_callback
from keyboards.inline.choice_buttons import pear_keyboard, apples_keyboard, choose_item
from loader import dp


# –ø–æ –∫–æ–º–∞–Ω–¥–µ item –æ—Ç–æ–±—Ä–∞–∂–∞–µ–º —Ñ–æ—Ç–æ –º–∞–≥–∞–∑–∏–Ω–∞ –∏ –º–µ–Ω—é —Å –≤—ã–±–æ—Ä–æ–º —Ç–æ–≤–∞—Ä–∞. –ú–µ–Ω—é –≥–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç—Å—è –∏—Å—Ö–æ–¥—è –∏–∑ —Ç–æ–≥–æ, –∫–∞–∫–∏–µ —Ç–æ–≤–∞—Ä—ã
# –Ω–∞—Ö–æ–¥—è—Ç—Å—è –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö (–ø—Ä–æ—Å—Ç–æ –º–∞—Å—Å–∏–≤ –≤ db.py)
@dp.message_handler(Command("item"))
async def show_items(message: Message):
    await message.answer_photo(photo="https://i.pinimg.com/originals/88/96/32/88963271b64bb94ce4c404471434cc07.jpg",
                               caption="FRUITS SHOP",
                               reply_markup=choose_item)


# –ü–æ—Å–∫–æ–ª—å–∫—É –Ω–µ –Ω–∞–∑–Ω–∞—á–µ–Ω –∞—Ä–≥—É–º–µ–Ω—Ç –¥–ª—è –Ω–∞—à–µ–≥–æ —Ñ–∏–ª—å—Ç—Ä–∞, –≤ —Ö—ç–Ω–¥–ª–µ—Ä –±—É–¥—É—Ç –ø–æ–ø–∞–¥–∞—Ç—å –≤—Å–µ, —á—Ç–æ –Ω–∞–∑–Ω–∞—á–∞–µ—Ç—Å—è
# –¥–ª—è —ç—Ç–æ–≥–æ –∫–æ–ª–ª–±—ç–∫–∞
@dp.callback_query_handler(choose_callback.filter())
async def buying_apples(call: CallbackQuery, callback_data: dict):
    await call.answer(cache_time=60)
    choose_action = InlineKeyboardMarkup(row_width=2)
    id = callback_data.get('id')
    fruit = fruits[int(id)]
    # —Å–æ–∑–¥–∞–µ–º –∫–Ω–æ–ø–∫–∏ –¥–ª—è –º–µ–Ω—é
    buy_item = InlineKeyboardButton(text="Buy", callback_data=buy_callback.new(id=id))
    choose_action.insert(buy_item)
    like_item = InlineKeyboardButton(text="üëç", callback_data=like_callback.new(id=id))
    choose_action.insert(like_item)
    dislike_item = InlineKeyboardButton(text="üëé", callback_data=dislike_callback.new(id=id))
    choose_action.insert(dislike_item)
    # –¥–ª—è —Ç–æ–≥–æ, —á—Ç–æ–±—ã –ø–æ–¥–µ–ª–∏—Ç—å—Å—è –∏—Å–ø–æ–ª—å–∑—É–µ–º switch_inline_query
    share = InlineKeyboardButton(text="Share it", switch_inline_query=f"Buy {fruit.name} in our shop!")
    choose_action.insert(share)

    await call.message.answer_photo(photo=fruit.photo,
                                    caption=f"This is  {fruit.name}. Buy and eat it", reply_markup=choose_action)


@dp.callback_query_handler(buy_callback.filter())
async def buying_apples(call: CallbackQuery, callback_data: dict):
    await call.answer(cache_time=60)
    logging.info(f"{callback_data=}")
    id = callback_data.get('id')
    fruit = fruits[int(id)]
    await call.message.answer_photo(photo=fruit.photo,
                                    caption=f"You bought the fruit with id {fruit.id}", reply_markup=None)


@dp.callback_query_handler(like_callback.filter())
async def buying_apples(call: CallbackQuery, callback_data: dict):
    await call.answer(cache_time=60)
    id = callback_data.get('id')
    fruit = fruits[int(id)]
    # –º–µ–Ω—è–µ–º —Ä–µ–π—Ç–∏–Ω–≥ —Å –ø–æ–º–æ—â—å—é –º–µ—Ç–æ–¥–∞ like –æ–±—å–µ–∫—Ç–∞ Fruit()
    fruit.like()
    await call.message.answer_photo(photo=fruit.photo,
                                    caption=f"You liked  fruit with id {fruit.id}. Now its rating is {fruit.rating}",
                                    reply_markup=None)


@dp.callback_query_handler(dislike_callback.filter())
async def buying_apples(call: CallbackQuery, callback_data: dict):
    await call.answer(cache_time=60)
    id = callback_data.get('id')
    fruit = fruits[int(id)]
    # –º–µ–Ω—è–µ–º —Ä–µ–π—Ç–∏–Ω–≥ —Å –ø–æ–º–æ—â—å—é –º–µ—Ç–æ–¥–∞ dislike –æ–±—å–µ–∫—Ç–∞ Fruit()
    fruit.dislike()
    await call.message.answer_photo(photo=fruit.photo,
                                    caption=f"You liked  fruit with id {fruit.id}. Now its rating is {fruit.rating}",
                                    reply_markup=None)


@dp.callback_query_handler(text="cancel")
async def cancel_buying(call: CallbackQuery):
    await call.answer("–í—ã –æ—Ç–º–µ–Ω–∏–ª–∏ —ç—Ç—É –ø–æ–∫—É–ø–∫—É!", show_alert=True)
    await call.message.edit_reply_markup(reply_markup=None)